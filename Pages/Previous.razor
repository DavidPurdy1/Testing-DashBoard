@page "/previous"

@using BlazorApp.Data
@inject TestDataRetrieval DataRetrieval

<h1>Previous Test Run Outcomes</h1>
 <div class ="entry">
    <EditForm Model="@entry" OnValidSubmit = "ValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary/>
    <InputText id="entry" @bind-Value="entry.Text"/>
    <button class="searchb" @onclick="OnInitializedAsync">Search</button> <p>Enter how many previous runs</p>
    </EditForm>
 </div>
@if (testdata == null){
    <p><em>Loading...</em></p>
}else{
    <table class="table">
        <thead>
            <tr>
                <th>Test Run Id</th>
                <th>Created Date</th>
                <th>Tests Passed</th>
                <th>Tests Failed</th>
                <th>Created By</th>
                <th>Application Name</th>
                <th>Application Version</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var data in testdata){
                <tr>
                    <td>@data.TestRunId</td>
                    <td>@data.CreatedDate</td>
                    <td>@data.TestsFailed</td>
                    <td>@data.TestsPassed</td>
                    <td>@data.CreatedBy</td>
                    <td>@data.ApplicationName</td>
                    <td>@data.ApplicationVersion</td> 
                </tr>
            }
        </tbody>
    </table>
}
@code {
    private TestData[] testdata;
    private DataEntry entry = new DataEntry();
    public void ValidSubmit()
    {
        Console.WriteLine("Valid Submit " + entry.Text);
    }
    protected override async Task OnInitializedAsync()
    {
        if (entry.Text != null)
        {
            if (!int.TryParse(entry.Text, out DataRetrieval.SearchId))
            {
                Console.WriteLine("Please enter an integer");
            }
        }
        testdata = await DataRetrieval.GetPreviousRunsDataAsync();
    }
}